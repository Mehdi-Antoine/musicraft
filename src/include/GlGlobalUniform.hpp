#pragma once

#include <GL/glew.h>

#include <glimac/glm.hpp>

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------------------CLASS GL_GLOBAL_UNIFORM--------------------------------------------
//-------------------------------------------------(VIRTUAL)----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

class GlGlobalUniform{

private:


public:

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//------------------------------------------------CONSTRUCTOR---------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	GlGlobalUniform();
	virtual ~GlGlobalUniform() = 0;

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------------------------FUNCTIONS----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	virtual void init(const char* global_uniform_name, int binding_index) = 0;

	virtual void attachProgram(GLuint program_id) = 0;

};

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//---------------------------------------CLASS GL_GLOBAL_UNIFORM_MATRIX-----------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

class GlGlobalUniformMatrix : public GlGlobalUniform{

private:

	const char*          m_global_uniform_name;

	GLuint               m_ubo;                         //Commun à tous les programmes glsl

	GLuint               m_ubo_binding_index;           //Commun à tous les programmes glsl

	std::vector <GLuint> m_global_uniform_block_index;  //Spécifique à chaque programme glsl

 

	glm::mat4            m_projection_matrix,
	                     m_view_matrix;

public:

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//------------------------------------------------CONSTRUCTOR---------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	GlGlobalUniformMatrix();
	~GlGlobalUniformMatrix();

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------------------------FUNCTIONS----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	void init(const char* global_uniform_name, int binding_index) override;

	void attachProgram(GLuint program_id) override;

	void updateProjectionMatrix(const glm::mat4 &projection_matrix);

	void updateViewMatrix(const glm::mat4 &view_matrix);

};

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------------------CLASS GL_GLOBAL_UNIFORM_FLOAT-----------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

class GlGlobalUniformFloat : public GlGlobalUniform{

private:

	const char*          m_global_uniform_name;

	GLuint               m_ubo;                         //Commun à tous les programmes glsl

	GLuint               m_ubo_binding_index;           //Commun à tous les programmes glsl

	std::vector <GLuint> m_global_uniform_block_index;  //Spécifique à chaque programme glsl



	float m_shininess;

public:

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//------------------------------------------------CONSTRUCTOR---------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	GlGlobalUniformFloat();
	~GlGlobalUniformFloat();

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------------------------FUNCTIONS----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	void init(const char* global_uniform_name, int binding_index) override;

	void attachProgram(GLuint program_id) override;

	void updateShininess(float shininess);

};

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------------------CLASS GL_GLOBAL_UNIFORM_VEC4------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

class GlGlobalUniformVec4 : public GlGlobalUniform{

private:

	const char*          m_global_uniform_name;

	GLuint               m_ubo;                         //Commun à tous les programmes glsl

	GLuint               m_ubo_binding_index;           //Commun à tous les programmes glsl

	std::vector <GLuint> m_global_uniform_block_index;  //Spécifique à chaque programme glsl



	glm::vec4            m_light_position,
						 m_light_intensity,
						 m_light_ks;

	glm::vec4            m_camera_position,
						 m_camera_front_vector;

public:
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//------------------------------------------------CONSTRUCTOR---------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	GlGlobalUniformVec4();
	~GlGlobalUniformVec4();

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------------------------FUNCTIONS----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

	void init(const char* global_uniform_name, int binding_index) override;

	void attachProgram(GLuint program_id) override;

	void updateLightPosition(const glm::vec4 & light_position);
	
	void updateLightIntensity(const glm::vec3 & light_intensity);

	void updateLightKs(const glm::vec3 & light_ks);

	void updateCameraPosition(const glm::vec3 & camera_position);

	void updateCameraFrontVector(const glm::vec3 & camera_front_vector);

};