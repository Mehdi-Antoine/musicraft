#include "include/Chunk.hpp"

const int Chunk::m_size = SIZE;

//--------------------------------------------------------------------------------------------------------------
//------------------------------------------------CONSTRUCTOR---------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

Chunk::Chunk(CubeType cube_type){

	for (int x = 0; x < Chunk::m_size; ++x)
	{
		for (int y = 0; y < Chunk::m_size; ++y)
		{
			for (int z = 0; z < Chunk::m_size; ++z)
			{
				if(y == 0 || y == 4){
					m_chunk[x][y][z] = SOLID;
				}
				else{
					m_chunk[x][y][z] = cube_type;
				}
				
			}
		}
	}

}

Chunk::~Chunk(){

}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------GETTERS-----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

CubeType Chunk::getCubeType(float x, float y, float z) const{

	return m_chunk[getIndex(x)][getIndex(y)][getIndex(z)];
}

/*
CubeType Chunk::getCubeType(const glm::vec3 &position) const{

	return m_chunk[getIndex(position.x)]
				  [getIndex(position.y)]
				  [getIndex(position.z)];

}
*/

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------SETTERS-----------------------------------------------------
//--------------------------------------------------------------------------------------------------------------	

void Chunk::setCubeType(int x, int y, int z, CubeType cube_type){

	m_chunk[x][y][z] = cube_type;

}

//-------------------------------------------------FUNCTIONS----------------------------------------------------

int Chunk::getIndex(float value) const{

	return int(value);

}